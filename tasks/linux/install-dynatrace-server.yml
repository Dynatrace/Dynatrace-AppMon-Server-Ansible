---
- name: "Create the installation directory {{ dynatrace_server_linux_install_dir }}"
  file:
    path: "{{ dynatrace_server_linux_install_dir }}"
    state: directory
  register: dynatrace_server_create_install_dir_result
  become: yes

- name: Change ownership of the installation directory if it had to be created
  file:
    path: "{{ dynatrace_server_linux_install_dir }}"
    owner: "{{ dynatrace_server_owner }}"
    group: "{{ dynatrace_server_group }}"
  when: dynatrace_server_create_install_dir_result | changed
  become: yes

- name: "Copy the Dynatrace installer to {{ dynatrace_server_linux_install_dir }}"
  copy:
    src: "{{ playbook_dir }}/roles/{{ dynatrace_server_role_name }}/files/linux/{{ dynatrace_server_linux_installer_file_name }}"
    dest: "{{ dynatrace_server_linux_install_dir }}"
  become: yes

- name: Copy the Dynatrace Server installer script to /tmp
  template:
    src: templates/linux/run-dynatrace-server-installer.sh.j2
    dest: /tmp/run-dynatrace-server-installer.sh

- name: Stop and disable running Dynatrace services
  service:
    name: dynaTraceServer
    state: stopped
    enabled: no
  ignore_errors: yes
  become: yes

- name: "Wait for the Dynatrace Server to become unavailable via port {{ item }}"
  wait_for:
    port: "{{ item }}"
    state: stopped
  with_items: [ "{{ dynatrace_server_collector_port }}", 2021, 6699, 8021, 9911]
  become: yes

- name: Install the Dynatrace Collector
  shell: /bin/bash /tmp/run-dynatrace-server-installer.sh
  become: yes

- name: Gather the name of the Dynatrace version installation directory
  shell: find . -maxdepth 1 -name dynatrace-\* -type d -printf '%T@ %p\n' | sort -k 1nr | cut -d' ' -f2 | head -1
  args:
    chdir: "{{ dynatrace_server_linux_install_dir }}"
  register: dynatrace_server_installed_version_dir
  become: yes

- name: Change ownership of the installation directory
  file:
    path: "{{ dynatrace_server_linux_install_dir }}/{{ dynatrace_server_installed_version_dir.stdout }}"
    owner: "{{ dynatrace_server_owner }}"
    group: "{{ dynatrace_server_group }}"
    state: directory
    recurse: yes
  become: yes

- name: Change mode of the installation directory
  file:
    path: "{{ dynatrace_server_linux_install_dir }}/{{ dynatrace_server_installed_version_dir.stdout }}"
    mode: 0755
  become: yes

- name: "Create a symlink of the actual installation directory to {{ dynatrace_server_linux_install_dir }}/dynatrace"
  file:
    src: "{{ dynatrace_server_linux_install_dir }}/{{ dynatrace_server_installed_version_dir.stdout }}"
    dest: "{{ dynatrace_server_linux_install_dir }}/dynatrace"
    owner: "{{ dynatrace_server_owner }}"
    group: "{{ dynatrace_server_group }}"
    mode: 0755
    state: link
  become: yes

- name: Remove the Dynatrace installer
  file:
    path: "{{ dynatrace_server_linux_install_dir }}/{{ dynatrace_server_linux_installer_file_name }}"
    state: absent
  become: yes

- name: Compute the Dynatrace Server's start runlevels for Ubuntu and Debian based distros
  set_fact:
    linux_service_start_runlevels="2 3 4 5"
    linux_service_stop_runlevels="0 1 6"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Compute the Dynatrace Server's start runlevels for CentOS and Red Hat based distros
  set_fact:
    linux_service_start_runlevels="3 5"
    linux_service_stop_runlevels="0 1 2 6"
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

- name: Make the 'dynaTraceServer' init script available in /etc/init.d
  template:
    src: templates/linux/init.d/dynaTraceServer.j2
    dest: /etc/init.d/dynaTraceServer
    owner: root
    group: root
    mode: 0755
  become: yes

- name: Enable and start Dynatrace services
  service:
    name: dynaTraceServer
    state: restarted
    sleep: 5
    enabled: yes
  become: yes

- name: "Wait for the Dynatrace Server to become available via port {{ item }}"
  wait_for:
    port: "{{ item }}"
    state: started
  with_items: ["{{ dynatrace_server_collector_port }}", 2021, 6699, 8021, 9911]
  become: yes

---
- name: Create the installation directory {{ dynatrace_server_linux_install_dir }}
  file: path="{{ dynatrace_server_linux_install_dir }}" state=directory
  register: dynatrace_server_create_install_dir_result
  sudo: yes

- name: Change ownership of the installation directory if it had to be created
  file: path="{{ dynatrace_server_linux_install_dir }}" owner=dynatrace group=dynatrace
  when: dynatrace_server_create_install_dir_result|changed
  sudo: yes

- name: Copy the Dynatrace installer to {{ dynatrace_server_linux_install_dir }}
  copy: src="{{ playbook_dir }}/roles/{{ dynatrace_server_role_name }}/files/linux/{{ dynatrace_server_linux_installer_file_name }}" dest="{{ dynatrace_server_linux_install_dir }}"
  sudo: yes

- name: Stop and disable running Dynatrace services
  service: name='{{ item }}' state=stopped enabled=no
  with_items: dynatrace_server_linux_service_names
  sudo: yes
  ignore_errors: yes

- name: Sleep for 5 seconds...
  pause: seconds=5

- name: Install Dynatrace
  shell: yes | java -jar {{ dynatrace_server_linux_installer_file_name }} chdir={{ dynatrace_server_linux_install_dir }}
  sudo: yes

- name: Gather the name of the Dynatrace version installation directory
  shell: find . -maxdepth 1 -name dynatrace-\* -type d -printf '%T@ %p\n' | sort -k 1nr | cut -d' ' -f2 | head -1 chdir={{ dynatrace_server_linux_install_dir }}
  register: dynatrace_server_installed_version_dir
  sudo: yes

- name: Change ownership of the installation directory
  file: path={{ dynatrace_server_linux_install_dir }}/{{ dynatrace_server_installed_version_dir.stdout }} owner=dynatrace group=dynatrace state=directory recurse=yes
  sudo: yes

- name: Change mode of the installation directory
  file: path={{ dynatrace_server_linux_install_dir }}/{{ dynatrace_server_installed_version_dir.stdout }} mode=0755
  sudo: yes

- name: Create a symlink of the actual installation directory to {{ dynatrace_server_linux_install_dir }}/dynatrace
  file: src={{ dynatrace_server_linux_install_dir }}/{{ dynatrace_server_installed_version_dir.stdout }} dest={{ dynatrace_server_linux_install_dir }}/dynatrace owner=dynatrace group=dynatrace mode=0755 state=link
  sudo: yes

- name: Remove the Dynatrace installer
  file: path="{{ dynatrace_server_linux_install_dir }}/{{ dynatrace_server_linux_installer_file_name }}" state=absent
  sudo: yes

- name: Compute the Dynatrace Collector's start runlevels for Ubuntu and Debian based distros
  set_fact:
    linux_service_start_runlevels="2 3 4 5"
    linux_service_stop_runlevels="0 1 6"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Compute the Dynatrace Collector's start runlevels for CentOS and Red Hat based distros
  set_fact:
    linux_service_start_runlevels="3 5"
    linux_service_stop_runlevels="0 1 2 6"
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Make the '{{ item }}' init script available in /etc/init.d
  template: src=../../templates/linux/init.d/{{ item }}.j2 dest=/etc/init.d/{{ item }} owner=root group=root mode=0755
  with_items: dynatrace_server_linux_service_names
  sudo: yes

- name: Configure the name in the Dynatrace Web Server Agent's 'dtwsagent.ini' file
  lineinfile: dest={{ dynatrace_server_linux_install_dir }}/dynatrace/agent/conf/dtwsagent.ini regexp='^Name .*' line='Name {{ dynatrace_server_wsagent_name }}'
  sudo: yes

- name: Configure the Dynatrace Collector host in the Dynatrace Web Server Agent's dtwsagent.ini' file
  lineinfile: dest={{ dynatrace_server_linux_install_dir }}/dynatrace/agent/conf/dtwsagent.ini regexp='^Server .*' line='Server {{ dynatrace_server_wsagent_collector_hostname }}:{{ dynatrace_server_wsagent_collector_port }}'
  sudo: yes

- name: Enable and start Dynatrace services
  service: name='{{ item }}' state=restarted sleep=5 enabled=yes
  with_items: dynatrace_server_linux_service_names
  sudo: yes

- name: Wait for the Dynatrace Server to become available via port 8021
  wait_for: port=8021 state=present
  sudo: yes

- name: Wait for the Dynatrace Server to become available via port 9998
  wait_for: port=9998 state=present
  sudo: yes

- name: Sleep for 5 seconds...
  pause: seconds=5
